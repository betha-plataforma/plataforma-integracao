{"version":3,"file":"studio-ui-angular-autenticacao.js","sources":["ng://@studio/ui-angular-autenticacao/lib/autenticacao-context.service.ts","ng://@studio/ui-angular-autenticacao/lib/autenticacao-requests.interceptor.ts","ng://@studio/ui-angular-autenticacao/lib/autenticacao.module.ts","ng://@studio/ui-angular-autenticacao/lib/usuario.ts","ng://@studio/ui-angular-autenticacao/lib/betha-oidc-provider-factory.ts"],"sourcesContent":["import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport { OAuthApplication } from '@betha-plataforma/oauth';\nimport { Usuario } from './usuario';\nimport { of, Observable } from 'rxjs';\n\nexport const OAUTH_APPLICATION: InjectionToken<OAuthApplication> = new InjectionToken('OauthApplication');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutenticacaoContextService {\n\n  constructor(@Inject(OAUTH_APPLICATION) private oauthApplication: OAuthApplication) {\n  }\n\n  logout() {\n    this.oauthApplication.logout();\n  }\n\n  refreshToken(): Promise<any> {\n    return this.oauthApplication.silentRefresh();\n  }\n\n  readonly getInformacaoUsuario = (): Observable<Usuario> => {\n    const user: any = this.oauthApplication.getUser();\n    return of({\n      celular: user.cellPhone,\n      dataNascimento: user.birthDay,\n      emails: {\n        primario: user.email,\n        secundario: user.secondaryEmail\n      },\n      foto: user.photo.split('?')[0].concat('?access_token=').concat(this.getAccessToken()),\n      id: user.id,\n      nome: user.name\n    });\n  }\n\n  readonly getAccessToken = (): string => {\n    if (this.oauthApplication.hasActiveSession()) {\n      const token = this.oauthApplication.getSession().accessToken;\n      return token ? token.access_token : undefined;\n    }\n    return undefined;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, Subject, throwError, from } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { AutenticacaoContextService } from './autenticacao-context.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AutenticacaoRequestsInterceptor implements HttpInterceptor {\n\n  private refreshTokenInProgress = false;\n  private tokenRefreshedSource = new Subject();\n  private tokenRefreshedSource$ = this.tokenRefreshedSource.asObservable();\n\n  constructor(private authenticationContextService: AutenticacaoContextService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(this.addAuthRequest(req)).pipe(catchError((err: HttpErrorResponse) => {\n      if ([401, 410].includes(err.status)) {\n        return this.refreshToken(req, next)\n          .pipe(\n            switchMap(() => {\n              return next.handle(this.addAuthRequest(req));\n            }),\n            catchError(err1 => {\n              this.authenticationContextService.logout();\n              return throwError(err1);\n            })\n          );\n      }\n      return throwError(err);\n    }));\n\n  }\n\n  private refreshToken(req: HttpRequest<any>, next: HttpHandler) {\n    if (this.refreshTokenInProgress) {\n      return new Observable(observer => {\n        this.tokenRefreshedSource$.subscribe(() => {\n          observer.next();\n          observer.complete();\n        });\n      });\n    }\n    this.refreshTokenInProgress = true;\n    return from(this.authenticationContextService.refreshToken()).pipe(\n      tap(() => {\n        this.refreshTokenInProgress = false;\n        this.tokenRefreshedSource.next();\n      }),\n      catchError((err) => {\n        this.refreshTokenInProgress = false;\n        this.authenticationContextService.logout();\n        return throwError(err);\n      })\n    );\n  }\n\n  private addAuthRequest(req: HttpRequest<any>) {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authenticationContextService.getAccessToken()}`\n      },\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AutenticacaoRequestsInterceptor } from './autenticacao-requests.interceptor';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule\n    ],\n    providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: AutenticacaoRequestsInterceptor,\n        multi: true\n    }]\n})\nexport class AutenticacaoModule { }\n","export interface EmailsUsuario {\n    readonly primario: string;\n    readonly secundario: string;\n}\n\nexport interface Usuario {\n    readonly id: string;\n    readonly nome: string;\n    readonly sexo?: 'M' | 'F';\n    readonly celular?: string;\n    readonly dataNascimento?: string;\n    readonly dataCadastro?: null;\n    readonly foto?: string;\n    readonly emails?: EmailsUsuario;\n}\n","import { OAuthConfig, OpenIDProvider } from '@betha-plataforma/oauth';\n\nconst OAUTH_URL: string = window['___bth'].envs.suite.oauth.v1.host; // tslint:disable-line\nconst SERVICE_LOGIN_URL: string = window['___bth'].envs.suite['service-login'].v1.host; // tslint:disable-line\nconst USERS_URL: string = window['___bth'].envs.suite.usuarios.v1.host; // tslint:disable-line\n\ntype OAuthConfigAutoProvider = Pick<OAuthConfig, Exclude<keyof OAuthConfig, 'provider'>>;\n\nexport function bethaOIDCProviderFactory(config: OAuthConfigAutoProvider): OAuthConfig {\n  const provider: OpenIDProvider = {\n    authorization_endpoint: `${OAUTH_URL}/authorize`,\n    check_session_iframe: `${SERVICE_LOGIN_URL}/openidsso.jsp`,\n    end_session_endpoint: `${SERVICE_LOGIN_URL}/logout?continue=${OAUTH_URL}/authorize?client_id=${config.clientId}%26response_type=token%26redirect_uri=${config.redirectUri}%26scope=${config.scope}`, //tslint:disable-line\n    introspect_endpoint: `${OAUTH_URL}/tokeninfo`,\n    token_endpoint: `${OAUTH_URL}/token`,\n    userinfo_endpoint: `${USERS_URL}/api/usuarios/@me`\n  };\n  return { ...config, provider };\n}\n\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAKA,MAAa,iBAAiB,GAAqC,IAAI,cAAc,CAAC,kBAAkB,CAAC;AAKzG,MAAa,0BAA0B;;;;IAErC,YAA+C,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAWxE,yBAAoB;;;QAAG;;kBACxB,IAAI,GAAQ,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACjD,OAAO,EAAE,CAAC;gBACR,OAAO,EAAE,IAAI,CAAC,SAAS;gBACvB,cAAc,EAAE,IAAI,CAAC,QAAQ;gBAC7B,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI,CAAC,KAAK;oBACpB,UAAU,EAAE,IAAI,CAAC,cAAc;iBAChC;gBACD,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBACrF,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CAAC;SACJ,EAAA;QAEQ,mBAAc;;;QAAG;YACxB,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,EAAE;;sBACtC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,WAAW;gBAC5D,OAAO,KAAK,GAAG,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC;aAC/C;YACD,OAAO,SAAS,CAAC;SAClB,EAAA;KA/BA;;;;IAED,MAAM;QACJ,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;KAChC;;;;IAED,YAAY;QACV,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;KAC9C;;;YAdF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YARQ,gBAAgB,uBAWV,MAAM,SAAC,iBAAiB;;;;;IAWrC,0DAaC;;IAED,oDAMC;;;;;IAhCW,sDAAqE;;;;;;;ACZnF,MAQa,+BAA+B;;;;IAM1C,YAAoB,4BAAwD;QAAxD,iCAA4B,GAA5B,4BAA4B,CAA4B;QAJpE,2BAAsB,GAAG,KAAK,CAAC;QAC/B,yBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;QACrC,0BAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;KAEQ;;;;;;IAEjF,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU;;;;QAAC,CAAC,GAAsB;YAClF,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACnC,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC;qBAChC,IAAI,CACH,SAAS;;;gBAAC;oBACR,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9C,EAAC,EACF,UAAU;;;;gBAAC,IAAI;oBACb,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,CAAC;oBAC3C,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;iBACzB,EAAC,CACH,CAAC;aACL;YACD,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB,EAAC,CAAC,CAAC;KAEL;;;;;;;IAEO,YAAY,CAAC,GAAqB,EAAE,IAAiB;QAC3D,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,OAAO,IAAI,UAAU;;;;YAAC,QAAQ;gBAC5B,IAAI,CAAC,qBAAqB,CAAC,SAAS;;;gBAAC;oBACnC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAChB,QAAQ,CAAC,QAAQ,EAAE,CAAC;iBACrB,EAAC,CAAC;aACJ,EAAC,CAAC;SACJ;QACD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CAChE,GAAG;;;QAAC;YACF,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;SAClC,EAAC,EACF,UAAU;;;;QAAC,CAAC,GAAG;YACb,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,CAAC;YAC3C,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB,EAAC,CACH,CAAC;KACH;;;;;;IAEO,cAAc,CAAC,GAAqB;QAC1C,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,UAAU,EAAE;gBACV,aAAa,EAAE,UAAU,IAAI,CAAC,4BAA4B,CAAC,cAAc,EAAE,EAAE;aAC9E;SACF,CAAC,CAAC;KACJ;;;YA1DF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;YAFzB,0BAA0B;;;;;;;;IAKjC,iEAAuC;;;;;IACvC,+DAA6C;;;;;IAC7C,gEAAyE;;;;;IAE7D,uEAAgE;;;;;;;ACd9E,MAiBa,kBAAkB;;;YAX9B,QAAQ,SAAC;gBACN,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,SAAS,EAAE,CAAC;wBACR,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,+BAA+B;wBACzC,KAAK,EAAE,IAAI;qBACd,CAAC;aACL;;;;;;;;;;AChBD,4BAGC;;;IAFG,iCAA0B;;IAC1B,mCAA4B;;;;;AAGhC,sBASC;;;IARG,qBAAoB;;IACpB,uBAAsB;;IACtB,uBAA0B;;IAC1B,0BAA0B;;IAC1B,iCAAiC;;IACjC,+BAA6B;;IAC7B,uBAAuB;;IACvB,yBAAgC;;;;;;;;MCX9B,SAAS,GAAW,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI;;;MAC7D,iBAAiB,GAAW,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI;;;MAChF,SAAS,GAAW,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI;;;;;AAItE,SAAgB,wBAAwB,CAAC,MAA+B;;UAChE,QAAQ,GAAmB;QAC/B,sBAAsB,EAAE,GAAG,SAAS,YAAY;QAChD,oBAAoB,EAAE,GAAG,iBAAiB,gBAAgB;QAC1D,oBAAoB,EAAE,GAAG,iBAAiB,oBAAoB,SAAS,wBAAwB,MAAM,CAAC,QAAQ,yCAAyC,MAAM,CAAC,WAAW,YAAY,MAAM,CAAC,KAAK,EAAE;;QACnM,mBAAmB,EAAE,GAAG,SAAS,YAAY;QAC7C,cAAc,EAAE,GAAG,SAAS,QAAQ;QACpC,iBAAiB,EAAE,GAAG,SAAS,mBAAmB;KACnD;IACD,yBAAY,MAAM,IAAE,QAAQ,IAAG;CAChC;;;;;;;;;;;;;;"}